{"ast":null,"code":"var _jsxFileName = \"/var/www/src/pages/FechamentoConta.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClosingPage = ({\n  participants,\n  products,\n  onSubmit\n}) => {\n  _s();\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\n\n  // Função para marcar presença dos participantes\n  const handlePresenceChange = (participantId, isPresent) => {\n    setSelectedParticipants(prev => isPresent ? [...prev, participantId] // Adiciona o participante se marcado como presente\n    : prev.filter(id => id !== participantId) // Remove se desmarcado\n    );\n  };\n\n  // Função para selecionar produtos consumidos pelos participantes\n  const handleProductSelection = (participantId, productId, quantity) => {\n    setSelectedParticipants(prevParticipants => prevParticipants.map(participant => {\n      if (participant.id === participantId) {\n        // Atualiza o produto consumido por este participante\n        const updatedConsumptions = {\n          ...participant.consumptions,\n          [productId]: quantity\n        };\n        return {\n          ...participant,\n          consumptions: updatedConsumptions\n        };\n      }\n      return participant;\n    }));\n  };\n\n  // Função para enviar os dados finais\n  const handleSubmit = () => {\n    const data = selectedParticipants.map(participantId => {\n      const participant = participants.find(p => p._id === participantId);\n      return {\n        ...participant,\n        consumptions: participant.consumptions // Produtos consumidos por este participante\n      };\n    });\n    onSubmit(data); // Envia para backend ou função final\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Fechamento da Conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [participants.map(participant => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedParticipants.includes(participant._id),\n            onChange: e => handlePresenceChange(participant._id, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), participant.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [product.name, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Quantidade consumida\",\n              onChange: e => handleProductSelection(participant._id, product._id, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)\n        }, product._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))]\n      }, participant._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        children: \"Salvar Fechamento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(ClosingPage, \"/WIhlYWgqHwsopbRsnP0Y4xQ+qk=\");\n_c = ClosingPage;\nexport default ClosingPage;\nvar _c;\n$RefreshReg$(_c, \"ClosingPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClosingPage","participants","products","onSubmit","_s","selectedParticipants","setSelectedParticipants","handlePresenceChange","participantId","isPresent","prev","filter","id","handleProductSelection","productId","quantity","prevParticipants","map","participant","updatedConsumptions","consumptions","handleSubmit","data","find","p","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","includes","onChange","e","target","name","product","placeholder","value","onClick","_c","$RefreshReg$"],"sources":["/var/www/src/pages/FechamentoConta.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ClosingPage = ({ participants, products, onSubmit }) => {\r\n    const [selectedParticipants, setSelectedParticipants] = useState([]);\r\n\r\n    // Função para marcar presença dos participantes\r\n    const handlePresenceChange = (participantId, isPresent) => {\r\n        setSelectedParticipants((prev) =>\r\n            isPresent\r\n                ? [...prev, participantId] // Adiciona o participante se marcado como presente\r\n                : prev.filter((id) => id !== participantId) // Remove se desmarcado\r\n        );\r\n    };\r\n\r\n    // Função para selecionar produtos consumidos pelos participantes\r\n    const handleProductSelection = (participantId, productId, quantity) => {\r\n        setSelectedParticipants((prevParticipants) =>\r\n            prevParticipants.map((participant) => {\r\n                if (participant.id === participantId) {\r\n                    // Atualiza o produto consumido por este participante\r\n                    const updatedConsumptions = {\r\n                        ...participant.consumptions,\r\n                        [productId]: quantity,\r\n                    };\r\n                    return { ...participant, consumptions: updatedConsumptions };\r\n                }\r\n                return participant;\r\n            })\r\n        );\r\n    };\r\n\r\n    // Função para enviar os dados finais\r\n    const handleSubmit = () => {\r\n        const data = selectedParticipants.map((participantId) => {\r\n            const participant = participants.find(p => p._id === participantId);\r\n            return {\r\n                ...participant,\r\n                consumptions: participant.consumptions, // Produtos consumidos por este participante\r\n            };\r\n        });\r\n        onSubmit(data); // Envia para backend ou função final\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3>Fechamento da Conta</h3>\r\n            <form>\r\n                {participants.map((participant) => (\r\n                    <div key={participant._id}>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                checked={selectedParticipants.includes(participant._id)}\r\n                                onChange={(e) =>\r\n                                    handlePresenceChange(participant._id, e.target.checked)\r\n                                }\r\n                            />\r\n                            {participant.name}\r\n                        </label>\r\n\r\n                        {/* Seleção de produtos consumidos */}\r\n                        {products.map((product) => (\r\n                            <div key={product._id}>\r\n                                <label>\r\n                                    {product.name}\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantidade consumida\"\r\n                                        onChange={(e) =>\r\n                                            handleProductSelection(\r\n                                                participant._id,\r\n                                                product._id,\r\n                                                e.target.value\r\n                                            )\r\n                                        }\r\n                                    />\r\n                                </label>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                ))}\r\n                <button type=\"button\" onClick={handleSubmit}>Salvar Fechamento</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClosingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}