{"ast":null,"code":"var _jsxFileName = \"/var/www/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [newParticipant, setNewParticipant] = useState('');\n  const [allParticipants, setAllParticipants] = useState([]); // Para armazenar todos os participantes existentes\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    quantity: ''\n  });\n\n  // Funções para abrir e fechar o pop-up\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  const openParticipantPopup = participant => {\n    setSelectedParticipant(participant);\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  useEffect(() => {\n    // Buscar os detalhes do evento\n    axios.get(`http://localhost:5000/events/${id}`).then(response => {\n      setEvent(response.data);\n      setParticipants(response.data.participants);\n      setProducts(response.data.products);\n    }).catch(error => console.error('Erro ao buscar evento:', error));\n\n    // Buscar todos os participantes já cadastrados\n    axios.get(`http://localhost:5000/participants`).then(response => {\n      setAllParticipants(response.data);\n    }).catch(error => console.error('Erro ao buscar participantes:', error));\n  }, [id]);\n  const handleAddExistingParticipant = () => {\n    if (newParticipant) {\n      const existingParticipant = allParticipants.find(participant => participant.name === newParticipant);\n      if (existingParticipant) {\n        const updatedParticipants = [...participants, existingParticipant];\n        setParticipants(updatedParticipants);\n\n        // Atualizar o evento no backend com o novo participante\n        axios.put(`http://localhost:5000/events/${id}/participants`, {\n          participants: updatedParticipants\n        }).catch(error => console.error('Erro ao atualizar participantes no evento:', error));\n      }\n      setNewParticipant(''); // Limpar o campo de seleção\n    }\n  };\n  const handleAddNewVisitor = () => {\n    if (newParticipant) {\n      axios.post(`http://localhost:5000/participants`, {\n        name: newParticipant\n      }).then(response => {\n        const createdParticipant = response.data;\n        const updatedParticipants = [...participants, createdParticipant];\n        setParticipants(updatedParticipants);\n\n        // Atualizar o evento no backend com o novo visitante\n        axios.put(`http://localhost:5000/events/${id}/participants`, {\n          participants: updatedParticipants\n        }).catch(error => console.error('Erro ao atualizar participantes no evento:', error));\n      }).catch(error => console.error('Erro ao criar participante:', error));\n      setNewParticipant(''); // Limpar o campo de texto\n    }\n  };\n  const handleAddProduct = () => {\n    if (newProduct.name && newProduct.price && newProduct.quantity) {\n      const updatedProducts = [...products, {\n        ...newProduct,\n        consumers: []\n      }];\n      setProducts(updatedProducts);\n      setNewProduct({\n        name: '',\n        price: '',\n        quantity: ''\n      });\n\n      // Enviar dados atualizados ao backend\n      axios.post(`http://localhost:5000/events/${id}/products`, newProduct).catch(error => console.error('Erro ao adicionar produto:', error));\n    }\n  };\n  const handleConsumptionChange = (productIndex, participantIndex, newQuantity) => {\n    const product = products[productIndex];\n    const participantId = participants[participantIndex]._id;\n    const updatedProducts = [...products];\n\n    // Aqui você vai clonar os participantes para evitar mutação direta\n    const updatedParticipants = [...participants];\n    // Atualiza a quantidade do produto específico do participante específico\n    const participant = updatedParticipants[participantIndex];\n    // Usar o newQuantity passado como argumento\n    participant.consumedProducts[productIndex].quantity = newQuantity;\n    setParticipants(updatedParticipants);\n    if (product.consumers.includes(participantId)) {\n      product.consumers = product.consumers.filter(id => id !== participantId);\n    } else {\n      product.consumers.push(participantId);\n    }\n    setProducts(updatedProducts);\n\n    // Enviar dados atualizados ao backend\n    axios.put(`http://localhost:5000/events/${id}/products`, {\n      products: updatedProducts\n    }).catch(error => console.error('Erro ao atualizar consumo:', error));\n  };\n\n  // estado para armazenar os participantes que consumiram o produto\n  const [consumers, setConsumers] = useState([]);\n  const handleParticipantSelection = (e, participantId) => {\n    if (e.target.checked) {\n      setConsumers([...consumers, participantId]); // Adiciona o participante selecionado\n    } else {\n      setConsumers(consumers.filter(id => id !== participantId)); // Remove se desmarcado\n    }\n  };\n  if (!event) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Detalhes do Evento: \", event.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data: \", new Date(event.date).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Local: \", event.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProduct.name,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          name: e.target.value\n        }),\n        placeholder: \"Nome do Produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.price,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          price: e.target.value\n        }),\n        placeholder: \"Pre\\xE7o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProduct.quantity,\n        onChange: e => setNewProduct({\n          ...newProduct,\n          quantity: e.target.value\n        }),\n        placeholder: \"Quantidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escolha os participantes que consumiram:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: participant._id,\n            onChange: e => handleParticipantSelection(e, participant._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: \"Adicionar Produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Participantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => openParticipantPopup(participant),\n            children: \"Ver Consumo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this)), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Consumo de \", selectedParticipant.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedParticipant.consumedProducts.map((product, productIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [product.name, \" - \", product.quantity, \" - R$\", product.price, /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                placeholder: \"Alterar Quantidade\",\n                onChange: e => handleConsumptionChange(productIndex, participants.findIndex(p => p._id === selectedParticipant._id), e.target.value),\n                value: product.quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this)]\n            }, productIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closePopup,\n            children: \"Fechar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setNewParticipant(e.target.value),\n          value: newParticipant,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione um participante existente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), allParticipants.map(participant => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: participant.name,\n            children: participant.name\n          }, participant._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddExistingParticipant,\n          children: \"Adicionar Participante Existente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newParticipant,\n          onChange: e => setNewParticipant(e.target.value),\n          placeholder: \"Nome do novo visitante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewVisitor,\n          children: \"Adicionar Novo Visitante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Consumo Atual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nome do Produto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pre\\xE7o Unit\\xE1rio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `R$${product.price}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: product.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `R$${product.price * product.quantity}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetail, \"dWr6ScGLYQVSFD/pdtw5zPZ1RWc=\", false, function () {\n  return [useParams];\n});\n_c = EventDetail;\nexport default EventDetail;\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","EventDetail","_s","id","event","setEvent","participants","setParticipants","products","setProducts","newParticipant","setNewParticipant","allParticipants","setAllParticipants","newProduct","setNewProduct","name","price","quantity","showPopup","setShowPopup","selectedParticipant","setSelectedParticipant","openParticipantPopup","participant","closePopup","get","then","response","data","catch","error","console","handleAddExistingParticipant","existingParticipant","find","updatedParticipants","put","handleAddNewVisitor","post","createdParticipant","handleAddProduct","updatedProducts","consumers","handleConsumptionChange","productIndex","participantIndex","newQuantity","product","participantId","_id","consumedProducts","includes","filter","push","setConsumers","handleParticipantSelection","e","target","checked","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","date","toLocaleDateString","location","type","value","onChange","placeholder","map","index","onClick","className","findIndex","p","_c","$RefreshReg$"],"sources":["/var/www/src/pages/EventDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EventDetail = () => {\r\n    const { id } = useParams();\r\n    const [event, setEvent] = useState(null);\r\n    const [participants, setParticipants] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [newParticipant, setNewParticipant] = useState('');\r\n    const [allParticipants, setAllParticipants] = useState([]); // Para armazenar todos os participantes existentes\r\n    const [newProduct, setNewProduct] = useState({ name: '', price: '', quantity: '' });\r\n\r\n    // Funções para abrir e fechar o pop-up\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n\r\n    const openParticipantPopup = (participant) => {\r\n        setSelectedParticipant(participant);\r\n        setShowPopup(true);\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Buscar os detalhes do evento\r\n        axios.get(`http://localhost:5000/events/${id}`)\r\n            .then(response => {\r\n                setEvent(response.data);\r\n                setParticipants(response.data.participants);\r\n                setProducts(response.data.products);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar evento:', error));\r\n\r\n        // Buscar todos os participantes já cadastrados\r\n        axios.get(`http://localhost:5000/participants`)\r\n            .then(response => {\r\n                setAllParticipants(response.data);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar participantes:', error));\r\n    }, [id]);\r\n\r\n    const handleAddExistingParticipant = () => {\r\n        if (newParticipant) {\r\n            const existingParticipant = allParticipants.find(participant => participant.name === newParticipant);\r\n\r\n            if (existingParticipant) {\r\n                const updatedParticipants = [...participants, existingParticipant];\r\n                setParticipants(updatedParticipants);\r\n\r\n                // Atualizar o evento no backend com o novo participante\r\n                axios.put(`http://localhost:5000/events/${id}/participants`, { participants: updatedParticipants })\r\n                    .catch(error => console.error('Erro ao atualizar participantes no evento:', error));\r\n            }\r\n\r\n            setNewParticipant(''); // Limpar o campo de seleção\r\n        }\r\n    };\r\n\r\n    const handleAddNewVisitor = () => {\r\n        if (newParticipant) {\r\n            axios.post(`http://localhost:5000/participants`, { name: newParticipant })\r\n                .then(response => {\r\n                    const createdParticipant = response.data;\r\n                    const updatedParticipants = [...participants, createdParticipant];\r\n                    setParticipants(updatedParticipants);\r\n\r\n                    // Atualizar o evento no backend com o novo visitante\r\n                    axios.put(`http://localhost:5000/events/${id}/participants`, { participants: updatedParticipants })\r\n                        .catch(error => console.error('Erro ao atualizar participantes no evento:', error));\r\n                })\r\n                .catch(error => console.error('Erro ao criar participante:', error));\r\n\r\n            setNewParticipant(''); // Limpar o campo de texto\r\n        }\r\n    };\r\n\r\n    const handleAddProduct = () => {\r\n        if (newProduct.name && newProduct.price && newProduct.quantity) {\r\n            const updatedProducts = [...products, { ...newProduct, consumers: [] }];\r\n            setProducts(updatedProducts);\r\n            setNewProduct({ name: '', price: '', quantity: '' });\r\n\r\n            // Enviar dados atualizados ao backend\r\n            axios.post(`http://localhost:5000/events/${id}/products`, newProduct)\r\n                .catch(error => console.error('Erro ao adicionar produto:', error));\r\n        }\r\n    };\r\n\r\n    const handleConsumptionChange = (productIndex, participantIndex, newQuantity) => {\r\n        const product = products[productIndex];\r\n        const participantId = participants[participantIndex]._id;\r\n        const updatedProducts = [...products];\r\n\r\n        // Aqui você vai clonar os participantes para evitar mutação direta\r\n        const updatedParticipants = [...participants];\r\n        // Atualiza a quantidade do produto específico do participante específico\r\n        const participant = updatedParticipants[participantIndex];\r\n        // Usar o newQuantity passado como argumento\r\n        participant.consumedProducts[productIndex].quantity = newQuantity;\r\n\r\n        setParticipants(updatedParticipants);\r\n\r\n        if (product.consumers.includes(participantId)) {\r\n            product.consumers = product.consumers.filter(id => id !== participantId);\r\n        } else {\r\n            product.consumers.push(participantId);\r\n        }\r\n\r\n        setProducts(updatedProducts);\r\n\r\n        // Enviar dados atualizados ao backend\r\n        axios.put(`http://localhost:5000/events/${id}/products`, { products: updatedProducts })\r\n            .catch(error => console.error('Erro ao atualizar consumo:', error));\r\n    };\r\n\r\n    // estado para armazenar os participantes que consumiram o produto\r\n    const [consumers, setConsumers] = useState([]);\r\n    const handleParticipantSelection = (e, participantId) => {\r\n        if (e.target.checked) {\r\n            setConsumers([...consumers, participantId]);  // Adiciona o participante selecionado\r\n        } else {\r\n            setConsumers(consumers.filter(id => id !== participantId));  // Remove se desmarcado\r\n        }\r\n    };\r\n\r\n    if (!event) return <div>Carregando...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Detalhes do Evento: {event.name}</h2>\r\n            <p>Data: {new Date(event.date).toLocaleDateString()}</p>\r\n            <p>Local: {event.location}</p>\r\n\r\n            {/* Adicionar Novo Produto */}\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={newProduct.name}\r\n                    onChange={(e) => setNewProduct({ ...newProduct, name: e.target.value })}\r\n                    placeholder=\"Nome do Produto\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={newProduct.price}\r\n                    onChange={(e) => setNewProduct({ ...newProduct, price: e.target.value })}\r\n                    placeholder=\"Preço\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={newProduct.quantity}\r\n                    onChange={(e) => setNewProduct({ ...newProduct, quantity: e.target.value })}\r\n                    placeholder=\"Quantidade\"\r\n                />\r\n\r\n                {/* Seção para selecionar participantes que consumiram o produto */}\r\n                <div>\r\n                    <label>Escolha os participantes que consumiram:</label>\r\n                    {participants.map((participant, index) => (\r\n                        <div key={index}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value={participant._id}\r\n                                onChange={(e) => handleParticipantSelection(e, participant._id)}\r\n                            />\r\n                            <span>{participant.name}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <button onClick={handleAddProduct}>Adicionar Produto</button>\r\n            </div>\r\n\r\n            <section>\r\n                {/* Seção de Participantes */}\r\n                <h3>Participantes</h3>\r\n                <ul>\r\n                    {participants.map((participant, index) => (\r\n                        <div key={index}>\r\n                            <span>{participant.name}</span>\r\n                            {/* Botão para ver o consumo do participante */}\r\n                            <button onClick={() => openParticipantPopup(participant)}>Ver Consumo</button>\r\n                        </div>\r\n                    ))}\r\n\r\n                    {/* Pop-up com detalhes do Consumo */}\r\n                    {showPopup && (\r\n                        <div className=\"popup\">\r\n                            <h3>Consumo de {selectedParticipant.name}</h3>\r\n                            <ul>\r\n                                {/* Lista dos produtos consumidos */}\r\n                                {selectedParticipant.consumedProducts.map((product, productIndex) => (\r\n                                    <li key={productIndex}>\r\n                                        {product.name} - {product.quantity} - R${product.price}\r\n                                        {/* Aqui, vamos implementar um input para modificar a quantidade consumida usando handleConsumptionChange */}\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            placeholder=\"Alterar Quantidade\"\r\n                                            onChange={(e) => handleConsumptionChange(productIndex, participants.findIndex(p => p._id === selectedParticipant._id), e.target.value)}\r\n                                            value={product.quantity}\r\n                                        />\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                            <button onClick={closePopup}>Fechar</button>\r\n                        </div>\r\n                    )}\r\n                </ul>\r\n\r\n                {/* Dropdown para selecionar participantes existentes */}\r\n                <div>\r\n                    <select onChange={(e) => setNewParticipant(e.target.value)} value={newParticipant}>\r\n                        <option value=\"\">Selecione um participante existente</option>\r\n                        {allParticipants.map((participant) => (\r\n                            <option key={participant._id} value={participant.name}>\r\n                                {participant.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button onClick={handleAddExistingParticipant}>Adicionar Participante Existente</button>\r\n                </div>\r\n\r\n                {/* Campo para adicionar visitantes */}\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newParticipant}\r\n                        onChange={(e) => setNewParticipant(e.target.value)}\r\n                        placeholder=\"Nome do novo visitante\"\r\n                    />\r\n                    <button onClick={handleAddNewVisitor}>Adicionar Novo Visitante</button>\r\n                </div>\r\n\r\n                {/* Listar Consumo Atual */}\r\n                <h2>Consumo Atual</h2>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nome do Produto</th>\r\n                            <th>Preço Unitário</th>\r\n                            <th>Quantidade</th>\r\n                            <th>Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* Aqui listamos todos os produtos adicionados */}\r\n                        {products.map((product, index) => (\r\n                            <tr key={index}>\r\n                                <td>{product.name}</td>\r\n                                <td>{`R$${product.price}`}</td>\r\n                                <td>{product.quantity}</td>\r\n                                <td>{`R$${product.price * product.quantity}`}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default EventDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}