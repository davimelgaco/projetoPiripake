{"ast":null,"code":"var _jsxFileName = \"/var/www/src/pages/EventDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport ParticipantList from './../components/ParticipantList';\nimport ProductsList from './../components/ProductsList';\nimport AddProductForm from './../components/AddProductForm';\nimport ParticipantPopup from './../components/ParticipantPopup';\nimport EditProductForm from './../components/EditProductForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [event, setEvent] = useState(null);\n  const [participants, setParticipants] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [newParticipant, setNewParticipant] = useState('');\n  const [allParticipants, setAllParticipants] = useState([]); // Para armazenar todos os participantes existentes\n  const [newProduct, setNewProduct] = useState({\n    name: '',\n    price: '',\n    quantity: ''\n  });\n  const [editingProduct, setEditingProduct] = useState(null); // Estado para o produto em edição\n\n  // Funções para abrir e fechar o pop-up\n  const [showPopup, setShowPopup] = useState(false);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n  const openParticipantPopup = participant => {\n    setSelectedParticipant(participant);\n    setShowPopup(true);\n  };\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  useEffect(() => {\n    // Buscar os detalhes do evento\n    axios.get(`http://localhost:5000/events/${id}`).then(response => {\n      setEvent(response.data);\n      setParticipants(response.data.participants);\n      setProducts(response.data.products);\n    }).catch(error => console.error('Erro ao buscar evento:', error));\n\n    // Buscar todos os participantes já cadastrados\n    axios.get(`http://localhost:5000/participants`).then(response => {\n      setAllParticipants(response.data);\n    }).catch(error => console.error('Erro ao buscar participantes:', error));\n  }, [id]);\n  const handleAddExistingParticipant = () => {\n    if (newParticipant) {\n      const existingParticipant = allParticipants.find(participant => participant.name === newParticipant);\n      if (existingParticipant) {\n        const updatedParticipants = [...participants, existingParticipant];\n        setParticipants(updatedParticipants);\n\n        // Atualizar o evento no backend com o novo participante\n        axios.put(`http://localhost:5000/events/${id}/participants`, {\n          participants: updatedParticipants\n        }).catch(error => console.error('Erro ao atualizar participantes no evento:', error));\n      }\n      setNewParticipant(''); // Limpar o campo de seleção\n    }\n  };\n  const handleAddNewVisitor = () => {\n    if (newParticipant) {\n      axios.post(`http://localhost:5000/participants`, {\n        name: newParticipant\n      }).then(response => {\n        const createdParticipant = response.data;\n        const updatedParticipants = [...participants, createdParticipant];\n        setParticipants(updatedParticipants);\n\n        // Atualizar o evento no backend com o novo visitante\n        axios.put(`http://localhost:5000/events/${id}/participants`, {\n          participants: updatedParticipants\n        }).catch(error => console.error('Erro ao atualizar participantes no evento:', error));\n      }).catch(error => console.error('Erro ao criar participante:', error));\n      setNewParticipant(''); // Limpar o campo de texto\n    }\n  };\n  const handleAddProduct = newProduct => {\n    if (newProduct.name && newProduct.price && newProduct.quantity) {\n      const updatedProducts = [...products, {\n        ...newProduct,\n        consumers: []\n      }];\n      setProducts(updatedProducts);\n\n      // Enviar dados atualizados ao backend\n      axios.post(`http://localhost:5000/events/${id}/products`, newProduct).catch(error => console.error('Erro ao adicionar produto:', error));\n    }\n  };\n  const handleConsumptionChange = (productIndex, participantIndex, newQuantity) => {\n    // Verifica se o novo valor de quantidade não está vazio\n    if (newQuantity === '') return;\n\n    // Clona a lista de produtos para evitar mutação direta\n    const updatedProducts = [...products];\n    // Clona a lista de participantes para evitar mutação direta\n    const updatedParticipants = [...participants];\n\n    // Acessa o participante que será atualizado\n    const participant = updatedParticipants[participantIndex];\n\n    // Atualiza a quantidade do produto específico do participante\n    // Converte newQuantity para número para evitar erros em operações matemáticas\n    participant.consumedProducts[productIndex].quantity = Number(newQuantity);\n\n    // Atualiza o estado dos participantes\n    setParticipants(updatedParticipants);\n\n    // Desestrutura o ID do participante para uso posterior\n    const {\n      _id: participantId\n    } = participant;\n\n    // Verifica se o participante já está na lista de consumidores do produto\n    if (updatedProducts[productIndex].consumers.includes(participantId)) {\n      // Se estiver, remove o participante da lista de consumidores\n      updatedProducts[productIndex].consumers = updatedProducts[productIndex].consumers.filter(id => id !== participantId);\n    } else {\n      // Caso contrário, adiciona o participante à lista de consumidores\n      updatedProducts[productIndex].consumers.push(participantId);\n    }\n\n    // Atualiza o estado dos produtos\n    setProducts(updatedProducts);\n\n    // Enviar dados atualizados ao backend\n    axios.put(`http://localhost:5000/events/${id}/products`, {\n      products: updatedProducts\n    }).catch(error => console.error('Erro ao atualizar consumo:', error));\n  };\n\n  // estado para armazenar os participantes que consumiram o produto\n  const [consumers, setConsumers] = useState([]);\n  const handleParticipantSelection = (e, participantId) => {\n    if (e.target.checked) {\n      setConsumers([...consumers, participantId]); // Adiciona o participante selecionado\n    } else {\n      setConsumers(consumers.filter(id => id !== participantId)); // Remove se desmarcado\n    }\n  };\n  if (!event) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Detalhes do Evento: \", event.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data: \", new Date(event.date).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Local: \", event.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(AddProductForm, {\n        eventId: id,\n        onProductAdded: newProduct => setProducts([...products, newProduct]),\n        participants: allParticipants // Passando a lista de participantes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProductsList, {\n        products: products,\n        onEditProduct: product => setEditingProduct(product) // Adicione essa prop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), editingProduct && /*#__PURE__*/_jsxDEV(EditProductForm, {\n        product: editingProduct,\n        eventId: id,\n        onProductUpdated: handleProductUpdated,\n        onClose: () => setEditingProduct(null) // Para fechar o formulário\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Escolha os participantes que consumiram:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), participants.map((participant, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: participant._id,\n            onChange: e => handleParticipantSelection(e, participant._id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: participant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: \"Adicionar Produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Participantes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(ParticipantList, {\n          participants: participants,\n          openParticipantPopup: openParticipantPopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), showPopup && /*#__PURE__*/_jsxDEV(ParticipantPopup, {\n          participant: selectedParticipant,\n          products: products,\n          onClose: closePopup,\n          handleConsumptionChange: handleConsumptionChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setNewParticipant(e.target.value),\n          value: newParticipant,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Selecione um participante existente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), allParticipants.map(participant => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: participant.name,\n            children: participant.name\n          }, participant._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddExistingParticipant,\n          children: \"Adicionar Participante Existente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newParticipant,\n          onChange: e => setNewParticipant(e.target.value),\n          placeholder: \"Nome do novo visitante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNewVisitor,\n          children: \"Adicionar Novo Visitante\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetail, \"T/llctUMjrsK7lBT3QW1yxLyErc=\", false, function () {\n  return [useParams];\n});\n_c = EventDetail;\nexport default EventDetail;\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","ParticipantList","ProductsList","AddProductForm","ParticipantPopup","EditProductForm","jsxDEV","_jsxDEV","EventDetail","_s","id","event","setEvent","participants","setParticipants","products","setProducts","newParticipant","setNewParticipant","allParticipants","setAllParticipants","newProduct","setNewProduct","name","price","quantity","editingProduct","setEditingProduct","showPopup","setShowPopup","selectedParticipant","setSelectedParticipant","openParticipantPopup","participant","closePopup","get","then","response","data","catch","error","console","handleAddExistingParticipant","existingParticipant","find","updatedParticipants","put","handleAddNewVisitor","post","createdParticipant","handleAddProduct","updatedProducts","consumers","handleConsumptionChange","productIndex","participantIndex","newQuantity","consumedProducts","Number","_id","participantId","includes","filter","push","setConsumers","handleParticipantSelection","e","target","checked","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","date","toLocaleDateString","location","eventId","onProductAdded","onEditProduct","product","onProductUpdated","handleProductUpdated","onClose","map","index","type","value","onChange","onClick","placeholder","_c","$RefreshReg$"],"sources":["/var/www/src/pages/EventDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport ParticipantList from './../components/ParticipantList';\r\nimport ProductsList from './../components/ProductsList';\r\nimport AddProductForm from './../components/AddProductForm';\r\nimport ParticipantPopup from './../components/ParticipantPopup';\r\nimport EditProductForm from './../components/EditProductForm';\r\n\r\n\r\n\r\n\r\n\r\nconst EventDetail = () => {\r\n    const { id } = useParams();\r\n    const [event, setEvent] = useState(null);\r\n    const [participants, setParticipants] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [newParticipant, setNewParticipant] = useState('');\r\n    const [allParticipants, setAllParticipants] = useState([]); // Para armazenar todos os participantes existentes\r\n    const [newProduct, setNewProduct] = useState({ name: '', price: '', quantity: '' });\r\n    const [editingProduct, setEditingProduct] = useState(null); // Estado para o produto em edição\r\n\r\n\r\n    // Funções para abrir e fechar o pop-up\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const [selectedParticipant, setSelectedParticipant] = useState(null);\r\n\r\n    const openParticipantPopup = (participant) => {\r\n        setSelectedParticipant(participant);\r\n        setShowPopup(true);\r\n    };\r\n\r\n    const closePopup = () => {\r\n        setShowPopup(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Buscar os detalhes do evento\r\n        axios.get(`http://localhost:5000/events/${id}`)\r\n            .then(response => {\r\n                setEvent(response.data);\r\n                setParticipants(response.data.participants);\r\n                setProducts(response.data.products);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar evento:', error));\r\n\r\n        // Buscar todos os participantes já cadastrados\r\n        axios.get(`http://localhost:5000/participants`)\r\n            .then(response => {\r\n                setAllParticipants(response.data);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar participantes:', error));\r\n    }, [id]);\r\n\r\n    const handleAddExistingParticipant = () => {\r\n        if (newParticipant) {\r\n            const existingParticipant = allParticipants.find(participant => participant.name === newParticipant);\r\n\r\n            if (existingParticipant) {\r\n                const updatedParticipants = [...participants, existingParticipant];\r\n                setParticipants(updatedParticipants);\r\n\r\n                // Atualizar o evento no backend com o novo participante\r\n                axios.put(`http://localhost:5000/events/${id}/participants`, { participants: updatedParticipants })\r\n                    .catch(error => console.error('Erro ao atualizar participantes no evento:', error));\r\n            }\r\n\r\n            setNewParticipant(''); // Limpar o campo de seleção\r\n        }\r\n    };\r\n\r\n    const handleAddNewVisitor = () => {\r\n        if (newParticipant) {\r\n            axios.post(`http://localhost:5000/participants`, { name: newParticipant })\r\n                .then(response => {\r\n                    const createdParticipant = response.data;\r\n                    const updatedParticipants = [...participants, createdParticipant];\r\n                    setParticipants(updatedParticipants);\r\n\r\n                    // Atualizar o evento no backend com o novo visitante\r\n                    axios.put(`http://localhost:5000/events/${id}/participants`, { participants: updatedParticipants })\r\n                        .catch(error => console.error('Erro ao atualizar participantes no evento:', error));\r\n                })\r\n                .catch(error => console.error('Erro ao criar participante:', error));\r\n\r\n            setNewParticipant(''); // Limpar o campo de texto\r\n        }\r\n    };\r\n\r\n    const handleAddProduct = (newProduct) => {\r\n        if (newProduct.name && newProduct.price && newProduct.quantity) {\r\n            const updatedProducts = [...products, { ...newProduct, consumers: [] }];\r\n            setProducts(updatedProducts);\r\n\r\n\r\n            // Enviar dados atualizados ao backend\r\n            axios.post(`http://localhost:5000/events/${id}/products`, newProduct)\r\n                .catch(error => console.error('Erro ao adicionar produto:', error));\r\n        }\r\n    };\r\n\r\n    const handleConsumptionChange = (productIndex, participantIndex, newQuantity) => {\r\n        // Verifica se o novo valor de quantidade não está vazio\r\n        if (newQuantity === '') return;\r\n\r\n        // Clona a lista de produtos para evitar mutação direta\r\n        const updatedProducts = [...products];\r\n        // Clona a lista de participantes para evitar mutação direta\r\n        const updatedParticipants = [...participants];\r\n\r\n        // Acessa o participante que será atualizado\r\n        const participant = updatedParticipants[participantIndex];\r\n\r\n        // Atualiza a quantidade do produto específico do participante\r\n        // Converte newQuantity para número para evitar erros em operações matemáticas\r\n        participant.consumedProducts[productIndex].quantity = Number(newQuantity);\r\n\r\n        // Atualiza o estado dos participantes\r\n        setParticipants(updatedParticipants);\r\n\r\n        // Desestrutura o ID do participante para uso posterior\r\n        const { _id: participantId } = participant;\r\n\r\n        // Verifica se o participante já está na lista de consumidores do produto\r\n        if (updatedProducts[productIndex].consumers.includes(participantId)) {\r\n            // Se estiver, remove o participante da lista de consumidores\r\n            updatedProducts[productIndex].consumers = updatedProducts[productIndex].consumers.filter(id => id !== participantId);\r\n        } else {\r\n            // Caso contrário, adiciona o participante à lista de consumidores\r\n            updatedProducts[productIndex].consumers.push(participantId);\r\n        }\r\n\r\n        // Atualiza o estado dos produtos\r\n        setProducts(updatedProducts);\r\n\r\n        // Enviar dados atualizados ao backend\r\n        axios.put(`http://localhost:5000/events/${id}/products`, { products: updatedProducts })\r\n            .catch(error => console.error('Erro ao atualizar consumo:', error));\r\n    };\r\n\r\n\r\n\r\n    // estado para armazenar os participantes que consumiram o produto\r\n    const [consumers, setConsumers] = useState([]);\r\n    const handleParticipantSelection = (e, participantId) => {\r\n        if (e.target.checked) {\r\n            setConsumers([...consumers, participantId]);  // Adiciona o participante selecionado\r\n        } else {\r\n            setConsumers(consumers.filter(id => id !== participantId));  // Remove se desmarcado\r\n        }\r\n    };\r\n\r\n    if (!event) return <div>Carregando...</div>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Detalhes do Evento: {event.name}</h2>\r\n            <p>Data: {new Date(event.date).toLocaleDateString()}</p>\r\n            <p>Local: {event.location}</p>\r\n\r\n            {/* Adicionar Novo Produto */}\r\n            <div>\r\n                <AddProductForm\r\n                    eventId={id}\r\n                    onProductAdded={(newProduct) => setProducts([...products, newProduct])}\r\n                    participants={allParticipants} // Passando a lista de participantes\r\n                />\r\n                {/* Renderizando a lista de produtos */}\r\n                <ProductsList \r\n                products={products}\r\n                onEditProduct={(product) => setEditingProduct(product)} // Adicione essa prop\r\n            />\r\n\r\n                {/* Se estiver editando um produto, renderize o EditProductForm */}\r\n                {editingProduct && (\r\n                    <EditProductForm\r\n                        product={editingProduct}\r\n                        eventId={id}\r\n                        onProductUpdated={handleProductUpdated}\r\n                        onClose={() => setEditingProduct(null)} // Para fechar o formulário\r\n                    />\r\n                )}\r\n                {/* Seção para selecionar participantes que consumiram o produto */}\r\n                <div>\r\n                    <label>Escolha os participantes que consumiram:</label>\r\n                    {participants.map((participant, index) => (\r\n                        <div key={index}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                value={participant._id}\r\n                                onChange={(e) => handleParticipantSelection(e, participant._id)}\r\n                            />\r\n                            <span>{participant.name}</span>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <button onClick={handleAddProduct}>Adicionar Produto</button>\r\n            </div>\r\n\r\n            <section>\r\n                {/* Seção de Participantes */}\r\n                <h3>Participantes</h3>\r\n                <ul>\r\n                    {/* Renderizando o ParticipantList */}\r\n                    <ParticipantList\r\n                        participants={participants}\r\n                        openParticipantPopup={openParticipantPopup}\r\n                    />\r\n\r\n                    {/* Pop-up com detalhes do Consumo */}\r\n                    {showPopup && (\r\n                        <ParticipantPopup\r\n                            participant={selectedParticipant}\r\n                            products={products}\r\n                            onClose={closePopup}\r\n                            handleConsumptionChange={handleConsumptionChange}\r\n                        />\r\n                    )}\r\n                </ul>\r\n\r\n                {/* Dropdown para selecionar participantes existentes */}\r\n                <div>\r\n                    <select onChange={(e) => setNewParticipant(e.target.value)} value={newParticipant}>\r\n                        <option value=\"\">Selecione um participante existente</option>\r\n                        {allParticipants.map((participant) => (\r\n                            <option key={participant._id} value={participant.name}>\r\n                                {participant.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button onClick={handleAddExistingParticipant}>Adicionar Participante Existente</button>\r\n                </div>\r\n\r\n                {/* Campo para adicionar visitantes */}\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newParticipant}\r\n                        onChange={(e) => setNewParticipant(e.target.value)}\r\n                        placeholder=\"Nome do novo visitante\"\r\n                    />\r\n                    <button onClick={handleAddNewVisitor}>Adicionar Novo Visitante</button>\r\n                </div>\r\n\r\n\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default EventDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}